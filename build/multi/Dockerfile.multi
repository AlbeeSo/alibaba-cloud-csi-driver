# syntax=docker/dockerfile:1.6
FROM --platform=$BUILDPLATFORM golang:1.22.3 as build
WORKDIR /go/src/github.com/kubernetes-sigs/alibaba-cloud-csi-driver
ARG TARGETARCH
ARG TARGETOS
ARG CSI_VERSION=unknown
ARG GO_BUILD_ARGS
RUN --mount=type=bind,target=. \
    --mount=type=cache,target=/root/.cache/go-build \
    export GOOS=$TARGETOS && \
    export GOARCH=$TARGETARCH && \
    export CGO_ENABLED=0 && \
    go build ${GO_BUILD_ARGS} \
        -ldflags "-X github.com/kubernetes-sigs/alibaba-cloud-csi-driver/pkg/version.VERSION=${CSI_VERSION} \
                  -X github.com/kubernetes-sigs/alibaba-cloud-csi-driver/pkg/version.BUILDTIME=$(date -Iseconds)" \
        -o /out/plugin.csi.alibabacloud.com && \
    go build -o /out/csiplugin-connector ./build/lib/csiplugin-connector.go


FROM registry.eu-west-1.aliyuncs.com/acs/alinux:3-update as base
LABEL maintainers="Alibaba Cloud Authors" description="Alibaba Cloud CSI Plugin"

ARG TARGETARCH
RUN --mount=type=cache,target=/var/cache/dnf,sharing=locked,id=dnf-cache-$TARGETARCH \
    dnf install -y ca-certificates file tzdata nfs-utils xfsprogs e4fsprogs pciutils iputils strace cloud-utils-growpart gdisk nc telnet tar cpio && \
    ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && echo 'Asia/Shanghai' >/etc/timezone

FROM base as build-util-linux
ARG TARGETARCH
RUN --mount=type=cache,target=/var/cache/dnf,sharing=locked,id=dnf-cache-$TARGETARCH \
    dnf install -y tar xz make gcc diffutils

ADD --link --checksum=sha256:59e676aa53ccb44b6c39f0ffe01a8fa274891c91bef1474752fad92461def24f \
    https://www.kernel.org/pub/linux/utils/util-linux/v2.40/util-linux-2.40.1.tar.xz /src.tar.xz
RUN mkdir -p /src && tar -C /src --strip-components=1 -xf /src.tar.xz

# Ideally we should do cross-compilation here, but no easy solution on alinux. Re-consider if we switch to Debian
RUN cd /src && \
    ./configure --disable-all-programs --enable-blkid --enable-libblkid --prefix=/usr/local \
        --disable-nls --disable-bash-completion --disable-asciidoc --disable-dependency-tracking --disable-static && \
    make -j && \
    make install-strip DESTDIR=/out && \
    cd /out/usr/local && rm -r include share lib/pkgconfig

FROM base as init

ARG TARGETARCH
WORKDIR /root
RUN if [[ $TARGETARCH == "amd64" ]]; then \
        curl -O https://aliyun-alinas-eac.oss-cn-beijing.aliyuncs.com/alinas-efc-1.2-3.x86_64.rpm && \
        curl -O https://aliyun-encryption.oss-cn-beijing.aliyuncs.com/aliyun-alinas-utils-1.1-8.al7.noarch.rpm; \
    fi
RUN --mount=type=bind,source=build/lib,target=/csi-lib \
    cp /csi-lib/$TARGETARCH-init.sh /init.sh && \
    chmod +x /init.sh && \
    cp /csi-lib/freezefs.sh /freezefs.sh && \
    mkdir /csi && \
    cp /csi-lib/csiplugin-connector.service /csi/csiplugin-connector.service
COPY --link --from=build /out/csiplugin-connector /csi/csiplugin-connector
ENTRYPOINT ["/init.sh"]

FROM base
COPY --link --from=build-util-linux /out /
COPY --link --from=build /out/plugin.csi.alibabacloud.com /usr/bin/plugin.csi.alibabacloud.com
ENTRYPOINT ["/usr/bin/plugin.csi.alibabacloud.com"]
