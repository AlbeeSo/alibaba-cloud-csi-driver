// Code generated by protoc-gen-go-ttrpc. DO NOT EDIT.
// source: disk.proto
package proto

import (
	context "context"
	ttrpc "github.com/containerd/ttrpc"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
)

type ExtendedStatusService interface {
	ExpandVolume(context.Context, *ExpandVolumeRequest) (*emptypb.Empty, error)
}

func RegisterExtendedStatusService(srv *ttrpc.Server, svc ExtendedStatusService) {
	srv.RegisterService("katacontainers.extends.v1.ExtendedStatus", &ttrpc.ServiceDesc{
		Methods: map[string]ttrpc.Method{
			"ExpandVolume": func(ctx context.Context, unmarshal func(interface{}) error) (interface{}, error) {
				var req ExpandVolumeRequest
				if err := unmarshal(&req); err != nil {
					return nil, err
				}
				return svc.ExpandVolume(ctx, &req)
			},
		},
	})
}

type extendedstatusClient struct {
	client *ttrpc.Client
}

func NewExtendedStatusClient(client *ttrpc.Client) ExtendedStatusService {
	return &extendedstatusClient{
		client: client,
	}
}

func (c *extendedstatusClient) ExpandVolume(ctx context.Context, req *ExpandVolumeRequest) (*emptypb.Empty, error) {
	var resp emptypb.Empty
	if err := c.client.Call(ctx, "katacontainers.extends.v1.ExtendedStatus", "ExpandVolume", req, &resp); err != nil {
		return nil, err
	}
	return &resp, nil
}
